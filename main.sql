-- 1) colleges: basic college registry
CREATE TABLE IF NOT EXISTS `colleges` (
  `CLGID` CHAR(36) NOT NULL PRIMARY KEY,                         -- store UUID (e.g. generated by app or MySQL UUID())
  `CLG_NAME` VARCHAR(255) NOT NULL,
  `CLG_CONTACT_NUMBER` VARCHAR(32) DEFAULT NULL,
  `CLG_CONTACT_EMAIL` VARCHAR(255) DEFAULT NULL,
  `CLG_ADDRESS` TEXT DEFAULT NULL,
  `CLG_AUTH_TOKEN` VARCHAR(128) DEFAULT NULL,                   -- optional token to authenticate API calls from the college
  `CLG_HANDLER` VARCHAR(128) DEFAULT NULL,                      -- name or handler id (can reference handlers table)
  `CLG_DATA_STATUS` ENUM('APPROVED','NOT_APPROVED') NOT NULL DEFAULT 'NOT_APPROVED',
  `CLG_ADDED_ON` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `CLG_UPDATED_ON` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `IS_ACTIVE` TINYINT(1) NOT NULL DEFAULT 1,
  -- indexes
  UNIQUE KEY `uq_colleges_auth` (`CLG_AUTH_TOKEN`),
  KEY `idx_clg_name` (`CLG_NAME`(80)),
  KEY `idx_clg_status` (`CLG_DATA_STATUS`),
  KEY `idx_clg_handler` (`CLG_HANDLER`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


-- 1) Drop existing table (only if you want to recreate). Skip if not needed.
-- DROP TABLE IF EXISTS `college_data`;

-- 2) Recreate college_data WITHOUT a generated column for SEARCH_TEXT
CREATE TABLE IF NOT EXISTS `college_data` (
  `DATAID` CHAR(36) NOT NULL PRIMARY KEY,
  `CLG_ID` CHAR(36) NOT NULL,
  `DATA_TYPE` ENUM('BASIC','LOCATIONS','COURSES','FEES','DEPARTMENTS','OTHER') NOT NULL DEFAULT 'BASIC',
  `CLG_BASIC` JSON DEFAULT NULL,
  `CLG_LOCATIONS` JSON DEFAULT NULL,
  `CLG_COURSES` JSON DEFAULT NULL,
  `CLG_FEES` JSON DEFAULT NULL,
  `CLG_DEPARTMENTS` JSON DEFAULT NULL,
  `KEYWORDS` JSON DEFAULT NULL,
  `SEARCH_TEXT` TEXT DEFAULT NULL,                       -- plain TEXT (populated by triggers or app)
  `INFO_ADDED_BY` VARCHAR(128) DEFAULT NULL,
  `INFO_ADDED_ON` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `INFO_UPDATED_ON` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `DATA_VERSION` INT NOT NULL DEFAULT 1,
  `DATA_STATUS` ENUM('DRAFT','PUBLISHED','ARCHIVED') NOT NULL DEFAULT 'DRAFT',
  KEY `idx_college_fk` (`CLG_ID`),
  KEY `idx_data_type` (`DATA_TYPE`),
  -- Fulltext (optional, requires MySQL supporting fulltext on InnoDB)
  FULLTEXT KEY `ft_search_text` (`SEARCH_TEXT`),
  CONSTRAINT `fk_college_data_college` FOREIGN KEY (`CLG_ID`) REFERENCES `colleges`(`CLGID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


-- 3) Create triggers to populate SEARCH_TEXT on INSERT / UPDATE
DELIMITER $$

CREATE TRIGGER `trg_college_data_bi`
BEFORE INSERT ON `college_data`
FOR EACH ROW
BEGIN
  DECLARE _name TEXT DEFAULT '';
  DECLARE _desc TEXT DEFAULT '';

  -- safely extract name/description from CLG_BASIC JSON if present
  IF NEW.CLG_BASIC IS NOT NULL THEN
    SET _name = JSON_UNQUOTE(JSON_EXTRACT(NEW.CLG_BASIC, '$.name'));
    SET _desc = JSON_UNQUOTE(JSON_EXTRACT(NEW.CLG_BASIC, '$.description'));
  END IF;

  -- fallback to empty strings if NULL
  SET NEW.SEARCH_TEXT = CONCAT(COALESCE(_name, ''), ' ', COALESCE(_desc, ''));
END$$


CREATE TRIGGER `trg_college_data_bu`
BEFORE UPDATE ON `college_data`
FOR EACH ROW
BEGIN
  DECLARE _name TEXT DEFAULT '';
  DECLARE _desc TEXT DEFAULT '';

  IF NEW.CLG_BASIC IS NOT NULL THEN
    SET _name = JSON_UNQUOTE(JSON_EXTRACT(NEW.CLG_BASIC, '$.name'));
    SET _desc = JSON_UNQUOTE(JSON_EXTRACT(NEW.CLG_BASIC, '$.description'));
  END IF;

  SET NEW.SEARCH_TEXT = CONCAT(COALESCE(_name, ''), ' ', COALESCE(_desc, ''));
END$$

DELIMITER ;


-- 3) Optional: handlers table (people/accounts responsible for college records)
CREATE TABLE IF NOT EXISTS `handlers` (
  `HANDLER_ID` CHAR(36) NOT NULL PRIMARY KEY,
  `NAME` VARCHAR(200) NOT NULL,
  `EMAIL` VARCHAR(255) DEFAULT NULL,
  `PHONE` VARCHAR(32) DEFAULT NULL,
  `ROLE` VARCHAR(80) DEFAULT 'editor',
  `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY `uq_handler_email` (`EMAIL`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


-- 4) Optional: audit/log table for changes to college_data (useful for moderation/versioning)
CREATE TABLE IF NOT EXISTS `college_data_audit` (
  `AUDIT_ID` CHAR(36) NOT NULL PRIMARY KEY,
  `DATAID` CHAR(36) NOT NULL,
  `CLG_ID` CHAR(36) NOT NULL,
  `ACTION` ENUM('CREATE','UPDATE','APPROVE','REJECT','DELETE') NOT NULL,
  `CHANGED_BY` VARCHAR(128) DEFAULT NULL,
  `CHANGE_SUMMARY` TEXT DEFAULT NULL,
  `SNAPSHOT` JSON DEFAULT NULL,            -- snapshot of the record (optional)
  `CREATED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  KEY `idx_audit_dataid` (`DATAID`),
  CONSTRAINT `fk_audit_college_data` FOREIGN KEY (`DATAID`) REFERENCES `college_data`(`DATAID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


-- 5) Optional: auth_tokens table for issuing/rotating CLG_AUTH_TOKENs (if you want to track usage)
CREATE TABLE IF NOT EXISTS `college_tokens` (
  `TOKEN_ID` CHAR(36) NOT NULL PRIMARY KEY,
  `CLG_ID` CHAR(36) NOT NULL,
  `TOKEN` VARCHAR(128) NOT NULL,
  `EXPIRES_AT` DATETIME DEFAULT NULL,
  `IS_ACTIVE` TINYINT(1) NOT NULL DEFAULT 1,
  `ISSUED_AT` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  KEY `idx_token_clg` (`CLG_ID`),
  UNIQUE KEY `uq_token_value` (`TOKEN`),
  CONSTRAINT `fk_token_clg` FOREIGN KEY (`CLG_ID`) REFERENCES `colleges`(`CLGID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
